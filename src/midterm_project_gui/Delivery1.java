/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package midterm_project_gui;

import javax.swing.JOptionPane;

/**
 *
 * @author Jimuel
 */
public class Delivery1 extends javax.swing.JFrame {

    /**
     * Creates new form Delivery1
     */
    public Delivery1() {
        initComponents();
    }
    
    // Method t
    public static boolean compareIgnoreCase(String customer_street, String[] correct_street) {
        for (String str : correct_street) {
            if (str.equalsIgnoreCase(customer_street)) {
                return true; // Match found, return true
            }
        }
        return false; // No match found, return false
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Name_Input_Label = new javax.swing.JLabel();
        Name_Input = new javax.swing.JTextField();
        Address_Input_Label = new javax.swing.JLabel();
        Address_Input = new javax.swing.JTextField();
        Delivery_Scroll_Pane = new javax.swing.JScrollPane();
        Delivery_Table = new javax.swing.JTable();
        Proceed_Button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Midterm Project");

        Name_Input_Label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Name_Input_Label.setText("Customer Name:");

        Name_Input.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Name_Input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Name_InputActionPerformed(evt);
            }
        });

        Address_Input_Label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Address_Input_Label.setText("Address: (No, Street Name, Barangay, Municipality, Province)");

        Address_Input.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Address_Input.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Address_InputMouseClicked(evt);
            }
        });
        Address_Input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Address_InputActionPerformed(evt);
            }
        });

        Delivery_Scroll_Pane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Delivery_Scroll_Pane.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        Delivery_Scroll_Pane.setHorizontalScrollBar(null);

        Delivery_Table.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        Delivery_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "St. Peter"},
                {"2", "St. John"},
                {"3", "Lanao"},
                {"4", "Maguindanao"}
            },
            new String [] {
                "No.", "Street Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Delivery_Scroll_Pane.setViewportView(Delivery_Table);

        Proceed_Button.setText("Proceed");
        Proceed_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Proceed_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Proceed_Button)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(Name_Input_Label)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Name_Input, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(Address_Input)
                        .addComponent(Address_Input_Label)
                        .addComponent(Delivery_Scroll_Pane)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name_Input_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Name_Input))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Address_Input_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Address_Input)
                .addGap(18, 18, 18)
                .addComponent(Delivery_Scroll_Pane, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(Proceed_Button)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Name_InputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Name_InputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Name_InputActionPerformed

    private void Address_InputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Address_InputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Address_InputActionPerformed

    private void Proceed_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Proceed_ButtonActionPerformed
        
        if(this.Name_Input.getText().isBlank()){ // Error handling: If customer name is empty
            JOptionPane.showMessageDialog(this,
                "Missing customer name!",
                "Error", // Title of the dialog
                JOptionPane.ERROR_MESSAGE); // Message type
        }
        
        else if(this.Address_Input.getText().isBlank()){ // Error handling: If customer address is empty
            JOptionPane.showMessageDialog(this,
                "Missing customer address!",
                "Error", // Title of the dialog
                JOptionPane.ERROR_MESSAGE); // Message type
        }
        
        else{ // All input is not empty, now check format of customer address
            // Retrieve customer's complete address
            String complete_address = this.Address_Input.getText();
            
            if(!complete_address.contains(", ")){ // Error Handling: If customer did not separate address categories with (", ")
                JOptionPane.showMessageDialog(this,"""
                    Error in customer address format!
                    In writing your address, make sure to write comma and insert space for each category. 
                    Example: 1, St. Peter, Peter Subdivision, Culiat, Quezon City""",
                    "Error", // Title of the dialog
                    JOptionPane.ERROR_MESSAGE); // Message type
            }
            
            else{ // The address has (", "), now check if the street name is correctly formatted
                // Split the complete address using comma as the separator
                String[] parts = complete_address.split(", ");
                
                if(parts.length != 5){ // Error Handling: If customer did not complete all address categories in correct format
                    JOptionPane.showMessageDialog(this,"""
                    Error in customer address format!
                    In writing your address, make sure to write comma and insert space for each category. 
                    Example: 1, St. Peter, Peter Subdivision, Culiat, Quezon City""",
                    "Error", // Title of the dialog
                    JOptionPane.ERROR_MESSAGE); // Message type
                }
                
                else{ // The address has complete categories
                    // Extract the street part in complete address
                    String customer_street = parts[1]; // Street Name

                    // Given street names to be used
                    String [] correct_street = {"St. Peter", "St. John", "Lanao", "Maguindanao"};

                    // Compare customer street to given street names
                    boolean result = compareIgnoreCase(customer_street, correct_street);

                    if(!result){ // Error handling: If customer street does not equal the given street names
                        JOptionPane.showMessageDialog(this,"""
                            Error in customer address format!
                            In writing your address, choose from the given streets only. Make sure to write the street name as it is written in the table.
                            Also, make sure to follow the format given. Example: 1, St. Peter, Peter Subdivision, Culiat, Quezon City""",
                            "Error", // Title of the dialog
                            JOptionPane.ERROR_MESSAGE); // Message type
                    }

                    else{ // Format is correct
                        Delivery2 deliveryResult = new Delivery2(this.Name_Input.getText(), this.Address_Input.getText());
                        deliveryResult.setVisible(true);
                        this.dispose();
                    }
                }
            }
        }
    }//GEN-LAST:event_Proceed_ButtonActionPerformed

    private void Address_InputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Address_InputMouseClicked
        
    }//GEN-LAST:event_Address_InputMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Delivery1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Delivery1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Delivery1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Delivery1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Delivery1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Address_Input;
    private javax.swing.JLabel Address_Input_Label;
    private javax.swing.JScrollPane Delivery_Scroll_Pane;
    private javax.swing.JTable Delivery_Table;
    private javax.swing.JTextField Name_Input;
    private javax.swing.JLabel Name_Input_Label;
    private javax.swing.JButton Proceed_Button;
    // End of variables declaration//GEN-END:variables
}
